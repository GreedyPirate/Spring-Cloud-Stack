/*
 * This file is generated by jOOQ.
*/
package com.example.domain.jooq.tables.records;


import com.example.domain.jooq.tables.Address;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AddressRecord extends UpdatableRecordImpl<AddressRecord> implements Record4<UInteger, Integer, Integer, Integer> {

    private static final long serialVersionUID = -1502631535;

    /**
     * Setter for <code>jay.address.id</code>.
     */
    public void setId(UInteger value) {
        set(0, value);
    }

    /**
     * Getter for <code>jay.address.id</code>.
     */
    public UInteger getId() {
        return (UInteger) get(0);
    }

    /**
     * Setter for <code>jay.address.city</code>.
     */
    public void setCity(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>jay.address.city</code>.
     */
    public Integer getCity() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>jay.address.town</code>.
     */
    public void setTown(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>jay.address.town</code>.
     */
    public Integer getTown() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>jay.address.uid</code>.
     */
    public void setUid(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>jay.address.uid</code>.
     */
    public Integer getUid() {
        return (Integer) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<UInteger> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<UInteger, Integer, Integer, Integer> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<UInteger, Integer, Integer, Integer> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UInteger> field1() {
        return Address.ADDRESS.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return Address.ADDRESS.CITY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return Address.ADDRESS.TOWN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field4() {
        return Address.ADDRESS.UID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component2() {
        return getCity();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component3() {
        return getTown();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component4() {
        return getUid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getCity();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getTown();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value4() {
        return getUid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AddressRecord value1(UInteger value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AddressRecord value2(Integer value) {
        setCity(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AddressRecord value3(Integer value) {
        setTown(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AddressRecord value4(Integer value) {
        setUid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AddressRecord values(UInteger value1, Integer value2, Integer value3, Integer value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AddressRecord
     */
    public AddressRecord() {
        super(Address.ADDRESS);
    }

    /**
     * Create a detached, initialised AddressRecord
     */
    public AddressRecord(UInteger id, Integer city, Integer town, Integer uid) {
        super(Address.ADDRESS);

        set(0, id);
        set(1, city);
        set(2, town);
        set(3, uid);
    }
}
