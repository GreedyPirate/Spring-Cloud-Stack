/*
 * This file is generated by jOOQ.
*/
package com.example.domain.jooq.tables;


import com.example.domain.jooq.Indexes;
import com.example.domain.jooq.Jay;
import com.example.domain.jooq.Keys;
import com.example.domain.jooq.tables.records.JobStatusTraceLogRecord;
import org.jooq.*;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JobStatusTraceLog extends TableImpl<JobStatusTraceLogRecord> {

    private static final long serialVersionUID = 574923082;

    /**
     * The reference instance of <code>jay.JOB_STATUS_TRACE_LOG</code>
     */
    public static final JobStatusTraceLog JOB_STATUS_TRACE_LOG = new JobStatusTraceLog();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<JobStatusTraceLogRecord> getRecordType() {
        return JobStatusTraceLogRecord.class;
    }

    /**
     * The column <code>jay.JOB_STATUS_TRACE_LOG.id</code>.
     */
    public final TableField<JobStatusTraceLogRecord, String> ID = createField("id", org.jooq.impl.SQLDataType.VARCHAR(40).nullable(false), this, "");

    /**
     * The column <code>jay.JOB_STATUS_TRACE_LOG.job_name</code>.
     */
    public final TableField<JobStatusTraceLogRecord, String> JOB_NAME = createField("job_name", org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "");

    /**
     * The column <code>jay.JOB_STATUS_TRACE_LOG.original_task_id</code>.
     */
    public final TableField<JobStatusTraceLogRecord, String> ORIGINAL_TASK_ID = createField("original_task_id", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>jay.JOB_STATUS_TRACE_LOG.task_id</code>.
     */
    public final TableField<JobStatusTraceLogRecord, String> TASK_ID = createField("task_id", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>jay.JOB_STATUS_TRACE_LOG.slave_id</code>.
     */
    public final TableField<JobStatusTraceLogRecord, String> SLAVE_ID = createField("slave_id", org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false), this, "");

    /**
     * The column <code>jay.JOB_STATUS_TRACE_LOG.source</code>.
     */
    public final TableField<JobStatusTraceLogRecord, String> SOURCE = createField("source", org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false), this, "");

    /**
     * The column <code>jay.JOB_STATUS_TRACE_LOG.execution_type</code>.
     */
    public final TableField<JobStatusTraceLogRecord, String> EXECUTION_TYPE = createField("execution_type", org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false), this, "");

    /**
     * The column <code>jay.JOB_STATUS_TRACE_LOG.sharding_item</code>.
     */
    public final TableField<JobStatusTraceLogRecord, String> SHARDING_ITEM = createField("sharding_item", org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "");

    /**
     * The column <code>jay.JOB_STATUS_TRACE_LOG.state</code>.
     */
    public final TableField<JobStatusTraceLogRecord, String> STATE = createField("state", org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false), this, "");

    /**
     * The column <code>jay.JOB_STATUS_TRACE_LOG.message</code>.
     */
    public final TableField<JobStatusTraceLogRecord, String> MESSAGE = createField("message", org.jooq.impl.SQLDataType.VARCHAR(4000), this, "");

    /**
     * The column <code>jay.JOB_STATUS_TRACE_LOG.creation_time</code>.
     */
    public final TableField<JobStatusTraceLogRecord, Timestamp> CREATION_TIME = createField("creation_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * Create a <code>jay.JOB_STATUS_TRACE_LOG</code> table reference
     */
    public JobStatusTraceLog() {
        this(DSL.name("JOB_STATUS_TRACE_LOG"), null);
    }

    /**
     * Create an aliased <code>jay.JOB_STATUS_TRACE_LOG</code> table reference
     */
    public JobStatusTraceLog(String alias) {
        this(DSL.name(alias), JOB_STATUS_TRACE_LOG);
    }

    /**
     * Create an aliased <code>jay.JOB_STATUS_TRACE_LOG</code> table reference
     */
    public JobStatusTraceLog(Name alias) {
        this(alias, JOB_STATUS_TRACE_LOG);
    }

    private JobStatusTraceLog(Name alias, Table<JobStatusTraceLogRecord> aliased) {
        this(alias, aliased, null);
    }

    private JobStatusTraceLog(Name alias, Table<JobStatusTraceLogRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Jay.JAY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.JOB_STATUS_TRACE_LOG_PRIMARY, Indexes.JOB_STATUS_TRACE_LOG_TASK_ID_STATE_INDEX);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<JobStatusTraceLogRecord> getPrimaryKey() {
        return Keys.KEY_JOB_STATUS_TRACE_LOG_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<JobStatusTraceLogRecord>> getKeys() {
        return Arrays.<UniqueKey<JobStatusTraceLogRecord>>asList(Keys.KEY_JOB_STATUS_TRACE_LOG_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JobStatusTraceLog as(String alias) {
        return new JobStatusTraceLog(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JobStatusTraceLog as(Name alias) {
        return new JobStatusTraceLog(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public JobStatusTraceLog rename(String name) {
        return new JobStatusTraceLog(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public JobStatusTraceLog rename(Name name) {
        return new JobStatusTraceLog(name, null);
    }
}
